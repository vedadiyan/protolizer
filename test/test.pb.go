// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: test.proto

package users

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestEnum int32

const (
	TestEnum_TEST TestEnum = 0
)

// Enum value maps for TestEnum.
var (
	TestEnum_name = map[int32]string{
		0: "TEST",
	}
	TestEnum_value = map[string]int32{
		"TEST": 0,
	}
)

func (x TestEnum) Enum() *TestEnum {
	p := new(TestEnum)
	*p = x
	return p
}

func (x TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_proto_enumTypes[0].Descriptor()
}

func (TestEnum) Type() protoreflect.EnumType {
	return &file_test_proto_enumTypes[0]
}

func (x TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestEnum.Descriptor instead.
func (TestEnum) EnumDescriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

type General struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	I32           int32                  `protobuf:"varint,1,opt,name=i32,proto3" json:"i32,omitempty"`
	I64           int64                  `protobuf:"varint,2,opt,name=i64,proto3" json:"i64,omitempty"`
	Str           string                 `protobuf:"bytes,3,opt,name=str,proto3" json:"str,omitempty"`
	Boolean       bool                   `protobuf:"varint,4,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Flt           float32                `protobuf:"fixed32,5,opt,name=flt,proto3" json:"flt,omitempty"`
	Dbl           float64                `protobuf:"fixed64,6,opt,name=dbl,proto3" json:"dbl,omitempty"`
	Bytes         []byte                 `protobuf:"bytes,9,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Ui32          uint32                 `protobuf:"varint,10,opt,name=ui32,proto3" json:"ui32,omitempty"`
	Ui64          uint64                 `protobuf:"varint,11,opt,name=ui64,proto3" json:"ui64,omitempty"`
	Enum          TestEnum               `protobuf:"varint,12,opt,name=enum,proto3,enum=test.test.TestEnum" json:"enum,omitempty"`
	Sfixed32      int32                  `protobuf:"fixed32,13,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64      int64                  `protobuf:"fixed64,14,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Map           map[int32]string       `protobuf:"bytes,15,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Strs          []string               `protobuf:"bytes,16,rep,name=strs,proto3" json:"strs,omitempty"`
	Int32S        []int32                `protobuf:"varint,17,rep,packed,name=int32s,proto3" json:"int32s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *General) Reset() {
	*x = General{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *General) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*General) ProtoMessage() {}

func (x *General) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use General.ProtoReflect.Descriptor instead.
func (*General) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *General) GetI32() int32 {
	if x != nil {
		return x.I32
	}
	return 0
}

func (x *General) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *General) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *General) GetBoolean() bool {
	if x != nil {
		return x.Boolean
	}
	return false
}

func (x *General) GetFlt() float32 {
	if x != nil {
		return x.Flt
	}
	return 0
}

func (x *General) GetDbl() float64 {
	if x != nil {
		return x.Dbl
	}
	return 0
}

func (x *General) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *General) GetUi32() uint32 {
	if x != nil {
		return x.Ui32
	}
	return 0
}

func (x *General) GetUi64() uint64 {
	if x != nil {
		return x.Ui64
	}
	return 0
}

func (x *General) GetEnum() TestEnum {
	if x != nil {
		return x.Enum
	}
	return TestEnum_TEST
}

func (x *General) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *General) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *General) GetMap() map[int32]string {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *General) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *General) GetInt32S() []int32 {
	if x != nil {
		return x.Int32S
	}
	return nil
}

type Fixed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fx32          uint32                 `protobuf:"fixed32,1,opt,name=fx32,proto3" json:"fx32,omitempty"`
	Fx64          uint64                 `protobuf:"fixed64,2,opt,name=fx64,proto3" json:"fx64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fixed) Reset() {
	*x = Fixed{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fixed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed) ProtoMessage() {}

func (x *Fixed) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed.ProtoReflect.Descriptor instead.
func (*Fixed) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *Fixed) GetFx32() uint32 {
	if x != nil {
		return x.Fx32
	}
	return 0
}

func (x *Fixed) GetFx64() uint64 {
	if x != nil {
		return x.Fx64
	}
	return 0
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\x12\ttest.test\"\xaf\x03\n" +
	"\aGeneral\x12\x10\n" +
	"\x03i32\x18\x01 \x01(\x05R\x03i32\x12\x10\n" +
	"\x03i64\x18\x02 \x01(\x03R\x03i64\x12\x10\n" +
	"\x03str\x18\x03 \x01(\tR\x03str\x12\x18\n" +
	"\aboolean\x18\x04 \x01(\bR\aboolean\x12\x10\n" +
	"\x03flt\x18\x05 \x01(\x02R\x03flt\x12\x10\n" +
	"\x03dbl\x18\x06 \x01(\x01R\x03dbl\x12\x14\n" +
	"\x05bytes\x18\t \x01(\fR\x05bytes\x12\x12\n" +
	"\x04ui32\x18\n" +
	" \x01(\rR\x04ui32\x12\x12\n" +
	"\x04ui64\x18\v \x01(\x04R\x04ui64\x12'\n" +
	"\x04enum\x18\f \x01(\x0e2\x13.test.test.TestEnumR\x04enum\x12\x1a\n" +
	"\bsfixed32\x18\r \x01(\x0fR\bsfixed32\x12\x1a\n" +
	"\bsfixed64\x18\x0e \x01(\x10R\bsfixed64\x12-\n" +
	"\x03map\x18\x0f \x03(\v2\x1b.test.test.General.MapEntryR\x03map\x12\x12\n" +
	"\x04strs\x18\x10 \x03(\tR\x04strs\x12\x16\n" +
	"\x06int32s\x18\x11 \x03(\x05R\x06int32s\x1a6\n" +
	"\bMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"/\n" +
	"\x05Fixed\x12\x12\n" +
	"\x04fx32\x18\x01 \x01(\aR\x04fx32\x12\x12\n" +
	"\x04fx64\x18\x02 \x01(\x06R\x04fx64*\x14\n" +
	"\bTestEnum\x12\b\n" +
	"\x04TEST\x10\x00B\vZ\ttest/testb\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_test_proto_goTypes = []any{
	(TestEnum)(0),   // 0: test.test.TestEnum
	(*General)(nil), // 1: test.test.General
	(*Fixed)(nil),   // 2: test.test.Fixed
	nil,             // 3: test.test.General.MapEntry
}
var file_test_proto_depIdxs = []int32{
	0, // 0: test.test.General.enum:type_name -> test.test.TestEnum
	3, // 1: test.test.General.map:type_name -> test.test.General.MapEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		EnumInfos:         file_test_proto_enumTypes,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}

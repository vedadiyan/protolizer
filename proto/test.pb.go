// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: test.proto

package protobench

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimplePerson struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age           int32                  `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Id            uint64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimplePerson) Reset() {
	*x = SimplePerson{}
	mi := &file_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimplePerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimplePerson) ProtoMessage() {}

func (x *SimplePerson) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimplePerson.ProtoReflect.Descriptor instead.
func (*SimplePerson) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *SimplePerson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SimplePerson) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *SimplePerson) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ComplexMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Score         float64                `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Numbers       []int32                `protobuf:"varint,7,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     int64                  `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplexMessage) Reset() {
	*x = ComplexMessage{}
	mi := &file_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplexMessage) ProtoMessage() {}

func (x *ComplexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplexMessage.ProtoReflect.Descriptor instead.
func (*ComplexMessage) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *ComplexMessage) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ComplexMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplexMessage) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ComplexMessage) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ComplexMessage) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *ComplexMessage) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ComplexMessage) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *ComplexMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ComplexMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AddressInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Street        string                 `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Zipcode       string                 `protobuf:"bytes,3,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Country       string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	mi := &file_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{2}
}

func (x *AddressInfo) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *AddressInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AddressInfo) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *AddressInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ExtraData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         string                 `protobuf:"bytes,1,opt,name=notes,proto3" json:"notes,omitempty"`
	Priority      int32                  `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Flags         []bool                 `protobuf:"varint,3,rep,packed,name=flags,proto3" json:"flags,omitempty"`
	Config        []float64              `protobuf:"fixed64,4,rep,packed,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtraData) Reset() {
	*x = ExtraData{}
	mi := &file_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraData) ProtoMessage() {}

func (x *ExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraData.ProtoReflect.Descriptor instead.
func (*ExtraData) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{3}
}

func (x *ExtraData) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ExtraData) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ExtraData) GetFlags() []bool {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *ExtraData) GetConfig() []float64 {
	if x != nil {
		return x.Config
	}
	return nil
}

type NestedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Person        *SimplePerson          `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	Address       *AddressInfo           `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Phones        []string               `protobuf:"bytes,3,rep,name=phones,proto3" json:"phones,omitempty"`
	Extra         *ExtraData             `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NestedMessage) Reset() {
	*x = NestedMessage{}
	mi := &file_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedMessage) ProtoMessage() {}

func (x *NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedMessage.ProtoReflect.Descriptor instead.
func (*NestedMessage) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{4}
}

func (x *NestedMessage) GetPerson() *SimplePerson {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *NestedMessage) GetAddress() *AddressInfo {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *NestedMessage) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *NestedMessage) GetExtra() *ExtraData {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_test_proto protoreflect.FileDescriptor

const file_test_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"test.proto\x12\n" +
	"protobench\"D\n" +
	"\fSimplePerson\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03age\x18\x02 \x01(\x05R\x03age\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x04R\x02id\"\xcc\x02\n" +
	"\x0eComplexMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x01R\x05score\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x18\n" +
	"\anumbers\x18\a \x03(\x05R\anumbers\x12D\n" +
	"\bmetadata\x18\b \x03(\v2(.protobench.ComplexMessage.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\x03R\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\vAddressInfo\x12\x16\n" +
	"\x06street\x18\x01 \x01(\tR\x06street\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12\x18\n" +
	"\azipcode\x18\x03 \x01(\tR\azipcode\x12\x18\n" +
	"\acountry\x18\x04 \x01(\tR\acountry\"k\n" +
	"\tExtraData\x12\x14\n" +
	"\x05notes\x18\x01 \x01(\tR\x05notes\x12\x1a\n" +
	"\bpriority\x18\x02 \x01(\x05R\bpriority\x12\x14\n" +
	"\x05flags\x18\x03 \x03(\bR\x05flags\x12\x16\n" +
	"\x06config\x18\x04 \x03(\x01R\x06config\"\xb9\x01\n" +
	"\rNestedMessage\x120\n" +
	"\x06person\x18\x01 \x01(\v2\x18.protobench.SimplePersonR\x06person\x121\n" +
	"\aaddress\x18\x02 \x01(\v2\x17.protobench.AddressInfoR\aaddress\x12\x16\n" +
	"\x06phones\x18\x03 \x03(\tR\x06phones\x12+\n" +
	"\x05extra\x18\x04 \x01(\v2\x15.protobench.ExtraDataR\x05extraB\vZ\ttest/testb\x06proto3"

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData []byte
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)))
	})
	return file_test_proto_rawDescData
}

var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_test_proto_goTypes = []any{
	(*SimplePerson)(nil),   // 0: protobench.SimplePerson
	(*ComplexMessage)(nil), // 1: protobench.ComplexMessage
	(*AddressInfo)(nil),    // 2: protobench.AddressInfo
	(*ExtraData)(nil),      // 3: protobench.ExtraData
	(*NestedMessage)(nil),  // 4: protobench.NestedMessage
	nil,                    // 5: protobench.ComplexMessage.MetadataEntry
}
var file_test_proto_depIdxs = []int32{
	5, // 0: protobench.ComplexMessage.metadata:type_name -> protobench.ComplexMessage.MetadataEntry
	0, // 1: protobench.NestedMessage.person:type_name -> protobench.SimplePerson
	2, // 2: protobench.NestedMessage.address:type_name -> protobench.AddressInfo
	3, // 3: protobench.NestedMessage.extra:type_name -> protobench.ExtraData
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_proto_rawDesc), len(file_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
